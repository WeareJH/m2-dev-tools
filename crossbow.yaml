watch:
  default:
    options:
      block: true
    'tests:src': '@npm mocha -r ts-node/register tests/**'

tasks:

  test: >
    @npm mocha -r ts-node/register tests/**

  build-all:
    description: |
      Build all shells.
    tasks:
      - clean
      - chrome
      - inject
      - bg
      - webpack

  start:
    description: |
      Run the application in a regular Browser window with sample data
    tasks:
      - app-watch

  webpack:
    adaptor: npm
    env:
      NODE_ENV: production
    command: webpack

  app-watch:
    description: Run the extension in regular browser window
    adaptor: npm
    command: >
      webpack-dev-server --inline

  test-watch:
    cb watch 'tests:src -> ' --block

  lc:
    description: |
      Open a fresh instance of Chrome - this is a convience for easier debugging.
    adaptor: sh
    command: >
      /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome
      --auto-open-devtools-for-tabs
      https://gg.m2

  chrome:
    adaptor: npm
    command: >
      tsc src/chrome/{inject.ts,main.ts,background.ts}  --outdir shells/chrome/build
      --lib ES2015,DOM

  inject:
    adaptor: npm
    command: >
      browserify shells/chrome/build/chrome/inject.js
      > shells/chrome/build/inject.browser.js

  bg:
    adaptor: npm
    command: >
      browserify shells/chrome/build/chrome/background.js
      > shells/chrome/build/background.browser.js

  chrome-watch:
    adaptor: npm
    command: >
      tsc src/chrome/{inject.ts,main.ts,background.ts} -w --outdir shells/chrome/build
      --lib ES2015,DOM

  clean:
    - '@sh rm -rf shells/chrome/dist/**'
    - '@sh rm -rf shells/chrome/build/**'
